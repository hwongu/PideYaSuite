/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package edu.pe.ulima.frontend.pideya.desktop.internalframe;

import edu.pe.ulima.pideya.back.model.ClienteNatural;
import edu.pe.ulima.pideya.back.model.Usuario;
import edu.pe.ulima.pideya.back.service.ClienteNaturalService;
import edu.pe.ulima.pideya.back.types.TipoUsuario;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.URL;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author hwong
 */
public class FrmClienteNatural extends javax.swing.JInternalFrame {

    private ClienteNatural clienteNatural = new ClienteNatural();
    private ClienteNaturalService clienteNaturalService = new ClienteNaturalService();

    /**
     * Creates new form FrmClienteNatural
     */
    public FrmClienteNatural() {
        try {
            initComponents();
            URL url = getClass().getClassLoader().getResource("Logo.png");
            if (url != null) {
                this.lblTituloFormulario.setIcon(new ImageIcon(url));
            } else {
                System.err.println("¡Recurso no encontrado: miIcono.png!");
            }
            this.lblTituloFormulario.setText("Mantenimiento de Cliente Natural");
            this.setTitle("Mantenimiento de Cliente Natural");
            configurarTxtDni();
            configurarTxtUsuario();
            inicializarTablaClienteNatural(null);
        } catch (Exception ex) {
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTituloFormulario = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jtbPrincipal = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtFiltro = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        btnFiltar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDni = new javax.swing.JFormattedTextField();
        txtApellido = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigoUsuario = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        txtClave = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        txtTipoUsuario = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(589, 60));

        lblTituloFormulario.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTituloFormulario.setText("Mantenimiento");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTituloFormulario, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTituloFormulario)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        jtFiltro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtFiltro);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel6.setPreferredSize(new java.awt.Dimension(776, 50));

        jLabel1.setText("Filtro:");

        btnFiltar.setText("Filtrar");
        btnFiltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFiltar)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltar))
                .addGap(12, 12, 12))
        );

        jPanel3.add(jPanel6, java.awt.BorderLayout.NORTH);

        jtbPrincipal.addTab("Listar", jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de Cliente Natural"));

        jLabel2.setText("Código:");

        txtCodigo.setEditable(false);
        txtCodigo.setEnabled(false);
        txtCodigo.setFocusable(false);

        jLabel3.setText("Nombre:");

        jLabel4.setText("Apellido:");

        jLabel9.setText("DNI:");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtApellido, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNombre)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 486, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de Usuario"));

        jLabel5.setText("Código:");

        txtCodigoUsuario.setEditable(false);
        txtCodigoUsuario.setEnabled(false);
        txtCodigoUsuario.setFocusable(false);

        jLabel6.setText("Usuario:");

        jLabel7.setText("Clave:");

        jLabel8.setText("Tipo:");

        txtTipoUsuario.setEditable(false);
        txtTipoUsuario.setText("CLIENTE_NATURAL");
        txtTipoUsuario.setToolTipText("");
        txtTipoUsuario.setEnabled(false);
        txtTipoUsuario.setFocusable(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUsuario)
                    .addComponent(txtClave)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodigoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCodigoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel8.setPreferredSize(new java.awt.Dimension(776, 40));

        btnEliminar.setMnemonic('e');
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Eliminar Cliente Natural");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGuardar.setMnemonic('g');
        btnGuardar.setText("Guardar");
        btnGuardar.setToolTipText("Guardar Cliente Natural");
        btnGuardar.setMaximumSize(new java.awt.Dimension(76, 23));
        btnGuardar.setMinimumSize(new java.awt.Dimension(76, 23));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnNuevo.setMnemonic('n');
        btnNuevo.setText("Nuevo");
        btnNuevo.setToolTipText("Nuevo Cliente Natural");
        btnNuevo.setMaximumSize(new java.awt.Dimension(76, 23));
        btnNuevo.setMinimumSize(new java.awt.Dimension(76, 23));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 551, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.add(jPanel8, java.awt.BorderLayout.SOUTH);

        jtbPrincipal.addTab("Operación", jPanel4);

        jPanel2.add(jtbPrincipal, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFiltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltarActionPerformed
        // TODO add your handling code here:
        try {
            this.inicializarTablaClienteNatural(clienteNaturalService.filtrarPorNombre(txtFiltro.getText()));
        } catch (Exception ex) {
            enviarMensajeError("Ocurrio un error: " + ex.getMessage());
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnFiltarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        try {
            if (validarCampos()) {
                clienteNatural = new ClienteNatural();
                clienteNatural.setNombre(txtNombre.getText().trim().toUpperCase());
                clienteNatural.setApellido(txtApellido.getText().trim().toUpperCase());
                clienteNatural.setDNI(Integer.valueOf(txtDni.getText()));
                clienteNatural.setUsuario(new Usuario());
                clienteNatural.getUsuario().setCorreo(this.txtUsuario.getText());
                clienteNatural.getUsuario().setClave(txtClave.getText());
                clienteNatural.getUsuario().setTipoUsuario(TipoUsuario.CLIENTE_NATURAL);
                if (this.txtCodigo.getText().trim().length() <= 0 || this.txtCodigo.getText().equalsIgnoreCase("")) {
                    //guardar
                    clienteNatural = clienteNaturalService.agregarClienteNatural(clienteNatural);
                    if (clienteNatural != null) {
                        txtCodigo.setText(String.valueOf(clienteNatural.getIdCliente()));
                        txtCodigoUsuario.setText(String.valueOf(clienteNatural.getUsuario().getIdUsuario()));
                        enviarMensajeExito("Se registró el Cliente Natural con ID: " + clienteNatural.getIdCliente());
                    }
                } else {
                    //actualizar
                    clienteNatural.setIdCliente(Integer.valueOf(txtCodigo.getText()));
                    clienteNatural.getUsuario().setIdUsuario(Integer.valueOf(txtCodigoUsuario.getText()));
                    clienteNatural = clienteNaturalService.editarInformacionClienteNatural(clienteNatural);
                    if (clienteNatural != null) {
                        txtCodigo.setText(String.valueOf(clienteNatural.getIdCliente()));
                        enviarMensajeExito("Se actualizó el Cliente Natural con ID: " + clienteNatural.getIdCliente());
                    }
                }
                inicializarTablaClienteNatural(null);
            }
        } catch (Exception ex) {
            enviarMensajeError("Ocurrio un error: " + ex.getMessage());
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        try {
            if (this.txtCodigo.getText().trim().length() <= 0 || this.txtCodigo.getText().equalsIgnoreCase("")) {
                enviarMensajeError("No existe Cliente Natural para eliminar");
            } else {
                int opc = JOptionPane.showConfirmDialog(
                        this,
                        "¿Desea eliminar el Cliente seleccionado?",
                        "Confirmar eliminación",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE
                );
                if (opc != JOptionPane.YES_OPTION) {
                    return;
                }
                clienteNatural = new ClienteNatural();
                clienteNatural.setIdCliente(Integer.valueOf(txtCodigo.getText()));
                clienteNatural.setUsuario(new Usuario());
                clienteNatural.getUsuario().setIdUsuario(Integer.valueOf(txtCodigo.getText()));
                clienteNaturalService.eliminarClienteNatural(clienteNatural);
                enviarMensajeExito("Se eliminó de manera el Cliente Natural: " + this.txtNombre.getText());
                limpiar();
            }
        } catch (Exception ex) {
            enviarMensajeError("Ocurrio un error: " + ex.getMessage());
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void limpiar() {
        configurarTxtDni();
        configurarTxtUsuario();
        txtUsuario.setText("");
        txtDni.setText("00000000");
        txtCodigo.setText("");
        txtCodigoUsuario.setText("");
        txtClave.setText("");
        txtNombre.setText("");
        txtNombre.requestFocusInWindow();
        txtApellido.setText("");
        clienteNatural = new ClienteNatural();
        inicializarTablaClienteNatural(null);
    }

    private boolean validarCampos() {
        // Datos de Cliente Natural
        if (txtNombre.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "El campo Nombre no puede estar vacío.",
                    "Validación",
                    JOptionPane.WARNING_MESSAGE);
            txtNombre.requestFocusInWindow();
            return false;
        }
        if (txtApellido.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "El campo Apellido no puede estar vacío.",
                    "Validación",
                    JOptionPane.WARNING_MESSAGE);
            txtApellido.requestFocusInWindow();
            return false;
        }
        if (txtDni.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "El campo DNI no puede estar vacío.",
                    "Validación",
                    JOptionPane.WARNING_MESSAGE);
            txtDni.requestFocusInWindow();
            return false;
        }

        // Datos de Usuario
        if (txtUsuario.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "El campo Usuario no puede estar vacío.",
                    "Validación",
                    JOptionPane.WARNING_MESSAGE);
            txtUsuario.requestFocusInWindow();
            return false;
        }
        if (txtClave.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "El campo Clave no puede estar vacío.",
                    "Validación",
                    JOptionPane.WARNING_MESSAGE);
            txtClave.requestFocusInWindow();
            return false;
        }

        // Todos los campos están completos
        return true;
    }

    private void inicializarTablaClienteNatural(List<ClienteNatural> clientes) {
        // 1) Definir el modelo con 5 columnas: OBJ (oculta), ID, Nombre, Apellido, DNI
        DefaultTableModel model = new DefaultTableModel(
                new String[]{"OBJ", "ID", "Apellido", "Nombre", "DNI"},
                0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                if (columnIndex == 0) {
                    return ClienteNatural.class;
                }
                return super.getColumnClass(columnIndex);
            }
        };

        // 2) Rellenar filas
        if (clientes != null) {
            for (ClienteNatural cn : clientes) {
                model.addRow(new Object[]{
                    cn, // 0) objeto
                    cn.getIdCliente(), // 1) ID
                    cn.getApellido().toUpperCase(), // 2) Apellido
                    cn.getNombre().toUpperCase(), // 3) Nombre
                    cn.getDNI()// 4) DNI
                });
            }
        }

        // 3) Asignar modelo
        jtFiltro.setModel(model);

        // 4) Ajustar columnas
        TableColumnModel cols = jtFiltro.getColumnModel();
        // Ocultar columna OBJ
        cols.getColumn(0).setMinWidth(0);
        cols.getColumn(0).setMaxWidth(0);
        cols.getColumn(0).setWidth(0);
        // ID fijo
        cols.getColumn(1).setMinWidth(50);
        cols.getColumn(1).setMaxWidth(50);
        // Resto ajustable
        jtFiltro.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);

        // 5) Listener doble clic
        jtFiltro.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int row = jtFiltro.getSelectedRow();
                    if (row >= 0) {
                        ClienteNatural sel = (ClienteNatural) jtFiltro.getModel().getValueAt(row, 0);

                        // Volcar datos al formulario
                        txtCodigo.setText(String.valueOf(sel.getIdCliente()));
                        txtNombre.setText(sel.getNombre().toUpperCase());
                        txtApellido.setText(sel.getApellido().toUpperCase());
                        txtDni.setText(String.valueOf(sel.getDNI()));

                        // Si tienes campos de usuario asociados:
                        txtCodigoUsuario.setText(String.valueOf(sel.getUsuario().getIdUsuario()));
                        txtUsuario.setText(sel.getUsuario().getCorreo());
                        txtClave.setText(sel.getUsuario().getClave());

                        // Cambiar a pestaña de Operación (índice 1)
                        jtbPrincipal.setSelectedIndex(1);
                        // Poner foco en el primer campo editable
                        txtNombre.requestFocusInWindow();
                    }
                }
            }
        });
        jtFiltro.getTableHeader().setReorderingAllowed(false);
    }

    public void configurarTxtDni() {
        try {
            // 1) MaskFormatter de 8 dígitos
            MaskFormatter dniMask = new MaskFormatter("########");
            dniMask.setPlaceholderCharacter('0');
            dniMask.setAllowsInvalid(false);

            // 2) Asigno al JFormattedTextField
            txtDni.setFormatterFactory(new DefaultFormatterFactory(dniMask));
            txtDni.setColumns(8);

            // 3) Verificador de Input: comprueba 8 dígitos
            txtDni.setInputVerifier(new InputVerifier() {
                @Override
                public boolean verify(JComponent input) {
                    String text = ((JFormattedTextField) input).getText();
                    if (!text.matches("\\d{8}")) {
                        JOptionPane.showMessageDialog(
                                input,
                                "DNI inválido: debe tener exactamente 8 dígitos numéricos.",
                                "Error de formato",
                                JOptionPane.ERROR_MESSAGE
                        );
                        return false;
                    }
                    return true;
                }
            });
        } catch (ParseException ex) {
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void configurarTxtUsuario() {
        // Regex básico para correos comunes
        Pattern emailPattern = Pattern.compile(
                "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$"
        );

        txtUsuario.setInputVerifier(new InputVerifier() {
            @Override
            public boolean verify(JComponent input) {
                String text = ((JFormattedTextField) input).getText().trim();
                if (!emailPattern.matcher(text).matches()) {
                    JOptionPane.showMessageDialog(
                            input,
                            "Formato de correo inválido.\nDebe ser algo@dominio.com",
                            "Error de validación",
                            JOptionPane.ERROR_MESSAGE
                    );
                    return false;  // no permite perder el foco hasta corregir
                }
                return true;
            }
        });
    }

    public void enviarMensajeExito(String mensaje) {
        JOptionPane.showMessageDialog(
                this, // parent component (tu JFrame o JInternalFrame)
                mensaje,
                "Operación exitosa", // título de la ventana
                JOptionPane.INFORMATION_MESSAGE // icono de información
        );
    }

    public void enviarMensajeError(String mensaje) {
        JOptionPane.showMessageDialog(
                this, // parent component (tu JFrame o JInternalFrame)
                mensaje,
                "Error", // título de la ventana
                JOptionPane.ERROR_MESSAGE // icono de información
        );
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFiltar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtFiltro;
    private javax.swing.JTabbedPane jtbPrincipal;
    private javax.swing.JLabel lblTituloFormulario;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JPasswordField txtClave;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCodigoUsuario;
    private javax.swing.JFormattedTextField txtDni;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTipoUsuario;
    private javax.swing.JFormattedTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
