/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package edu.pe.ulima.frontend.pideya.desktop.internalframe;

import edu.pe.ulima.pideya.back.model.Categoria;
import edu.pe.ulima.pideya.back.service.CategoriaService;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.URL;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hwong
 */
public class FrmCategoria extends javax.swing.JInternalFrame {

    private Categoria categoria = new Categoria();
    private CategoriaService categoriaService = new CategoriaService();

    /**
     * Creates new form frmCategoria
     */
    public FrmCategoria() {
        try {
            initComponents();
            URL url = getClass().getClassLoader().getResource("Logo.png");
            if (url != null) {
                lblTituloFormulario.setIcon(new ImageIcon(url));
            } else {
                System.err.println("¡Recurso no encontrado: miIcono.png!");
            }
            lblTituloFormulario.setText("Mantenimiento de Categoría");
            setTitle("Mantenimiento de Categoría");
            inicializarTablaCategoria(null);
        } catch (Exception ex) {
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTituloFormulario = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jtbPrincipal = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtFiltro = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        btnFiltar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(589, 60));

        lblTituloFormulario.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTituloFormulario.setText("Mantenimiento");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTituloFormulario, javax.swing.GroupLayout.DEFAULT_SIZE, 736, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTituloFormulario)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        jtFiltro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtFiltro);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel6.setPreferredSize(new java.awt.Dimension(776, 50));

        jLabel1.setText("Filtro:");

        btnFiltar.setText("Filtrar");
        btnFiltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFiltar)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltar))
                .addGap(12, 12, 12))
        );

        jPanel3.add(jPanel6, java.awt.BorderLayout.NORTH);

        jtbPrincipal.addTab("Listar", jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("Código:");

        jLabel3.setText("Nombre:");

        txtCodigo.setEditable(false);
        txtCodigo.setEnabled(false);
        txtCodigo.setFocusable(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombre)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 593, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(301, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel8.setPreferredSize(new java.awt.Dimension(776, 40));

        btnEliminar.setMnemonic('e');
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Eliminar Categoría");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGuardar.setMnemonic('g');
        btnGuardar.setText("Guardar");
        btnGuardar.setToolTipText("Guardar Categoría");
        btnGuardar.setMaximumSize(new java.awt.Dimension(76, 23));
        btnGuardar.setMinimumSize(new java.awt.Dimension(76, 23));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnNuevo.setMnemonic('n');
        btnNuevo.setText("Nuevo");
        btnNuevo.setToolTipText("Nueva Categoría");
        btnNuevo.setMaximumSize(new java.awt.Dimension(76, 23));
        btnNuevo.setMinimumSize(new java.awt.Dimension(76, 23));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 510, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.add(jPanel8, java.awt.BorderLayout.SOUTH);

        jtbPrincipal.addTab("Operación", jPanel4);

        jPanel2.add(jtbPrincipal, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        try {
            if (txtNombre.getText().trim().length() > 0) {
                categoria = new Categoria();
                categoria.setNombre(txtNombre.getText().trim());
                if (txtCodigo.getText().trim().length() <= 0 || txtCodigo.getText().equalsIgnoreCase("")) {
                    //guardar
                    categoria = categoriaService.agregarCategoria(categoria);
                    if (categoria != null) {
                        txtCodigo.setText(String.valueOf(categoria.getIdCategoria()));
                        enviarMensajeExito("Se registró la Categoría con ID: " + categoria.getIdCategoria());
                    }
                } else {
                    //actualizar
                    categoria.setIdCategoria(Integer.valueOf(txtCodigo.getText()));
                    categoria = categoriaService.editarInformacionCategoria(categoria);
                    if (categoria != null) {
                        txtCodigo.setText(String.valueOf(categoria.getIdCategoria()));
                        enviarMensajeExito("Se actualizó la Categoría con ID: " + categoria.getIdCategoria());
                    }
                }
                inicializarTablaCategoria(null);
            } else {
                enviarMensajeAdvertencia("El campo nombre esta vacio");
                txtNombre.requestFocus();
            }
        } catch (Exception ex) {
            enviarMensajeError("Ocurrio un error: " + ex.getMessage());
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnFiltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltarActionPerformed
        try {
            inicializarTablaCategoria(categoriaService.filtrarCategoriasPorNombre(txtFiltro.getText().trim()));
        } catch (Exception ex) {
            enviarMensajeError("Ocurrio un error: " + ex.getMessage());
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFiltarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        try {

            if (txtCodigo.getText().trim().length() <= 0 || txtCodigo.getText().equalsIgnoreCase("")) {
                enviarMensajeError("No existe Categoría para eliminar");
            } else {
                int opc = JOptionPane.showConfirmDialog(
                        this,
                        "¿Desea eliminar la Categoría seleccionada?",
                        "Confirmar eliminación",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE
                );
                if (opc != JOptionPane.YES_OPTION) {
                    return;
                }
                categoria = new Categoria(Integer.valueOf(txtCodigo.getText().trim()), txtNombre.getText().trim());
                categoriaService.eliminarCategoria(categoria);
                enviarMensajeExito("Se eliminó de manera correcta la Categoría: " + txtNombre.getText().trim());
                limpiar();
            }
        } catch (Exception ex) {
            enviarMensajeError("Ocurrio un error: " + ex.getMessage());
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void limpiar() {
        try {
            inicializarTablaCategoria(null);
            txtCodigo.setText("");
            txtNombre.setText("");
            txtNombre.requestFocusInWindow();
            categoria = new Categoria();
        } catch (Exception e) {
            enviarMensajeError("Ocurrio un error: " + e.getMessage());
        }
    }

    private void inicializarTablaCategoria(List<Categoria> categorias) {

        DefaultTableModel model = new DefaultTableModel(
                new String[]{"OBJ", "ID", "Nombre"},
                0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // ninguna celda editable
                return false;
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                // Columna 0 guarda Categoria, 1 e 2 String/Integer
                if (columnIndex == 0) {
                    return Categoria.class;
                }
                return super.getColumnClass(columnIndex);
            }
        };
        // 3) Rellena el modelo
        if (categorias != null) {
            for (Categoria c : categorias) {
                model.addRow(new Object[]{c, c.getIdCategoria(), c.getNombre()});
            }
        }

        // 4) Asigna el modelo al JTable
        jtFiltro.setModel(model);

        // 5) Ajusta anchos de columna y modo de redimensionado
        // Ocultar columna 0
        jtFiltro.getColumnModel().getColumn(0).setMinWidth(0);
        jtFiltro.getColumnModel().getColumn(0).setMaxWidth(0);
        jtFiltro.getColumnModel().getColumn(0).setWidth(0);

        // Columna 1 con ancho fijo de 20px
        jtFiltro.getColumnModel().getColumn(1).setMinWidth(50);
        jtFiltro.getColumnModel().getColumn(1).setMaxWidth(50);

        // Columna 2 ocupa todo el espacio restante
        jtFiltro.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        jtFiltro.getColumnModel().getColumn(2).setPreferredWidth(1000); // valor alto para que use el resto

        // 5) Listener para doble clic
        jtFiltro.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2 && !e.isConsumed()) {
                    e.consume();
                    int row = jtFiltro.getSelectedRow();
                    if (row >= 0) {
                        // Obtenemos el objeto Categoria de la columna oculta
                        Categoria seleccion = (Categoria) jtFiltro.getModel().getValueAt(row, 0);
                        // Rellenar los text fields
                        txtCodigo.setText(String.valueOf(seleccion.getIdCategoria()));
                        txtNombre.setText(seleccion.getNombre());
                        jtbPrincipal.setSelectedIndex(1);
                        txtNombre.requestFocusInWindow();
                    }
                }
            }
        });

        jtFiltro.getTableHeader().setReorderingAllowed(false);
    }

    public void enviarMensajeAdvertencia(String mensaje) {
        JOptionPane.showMessageDialog(
                this, // parent component (tu JFrame o JInternalFrame)
                mensaje,
                "Mensaje Advertencia", // título de la ventana
                JOptionPane.INFORMATION_MESSAGE // icono de información
        );
    }

    public void enviarMensajeExito(String mensaje) {
        JOptionPane.showMessageDialog(
                this, // parent component (tu JFrame o JInternalFrame)
                mensaje,
                "Operación Exitosa", // título de la ventana
                JOptionPane.INFORMATION_MESSAGE // icono de información
        );
    }

    public void enviarMensajeError(String mensaje) {
        JOptionPane.showMessageDialog(
                this, // parent component (tu JFrame o JInternalFrame)
                mensaje,
                "Operación con Error", // título de la ventana
                JOptionPane.ERROR_MESSAGE // icono de información
        );
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFiltar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtFiltro;
    private javax.swing.JTabbedPane jtbPrincipal;
    private javax.swing.JLabel lblTituloFormulario;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
