/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package edu.pe.ulima.frontend.pideya.desktop.internalframe;

import edu.pe.ulima.pideya.back.model.Categoria;
import edu.pe.ulima.pideya.back.model.Producto;
import edu.pe.ulima.pideya.back.service.CategoriaService;
import edu.pe.ulima.pideya.back.service.ProductoService;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.net.URL;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author hwong
 */
public class FrmProducto extends javax.swing.JInternalFrame {

    private Producto producto;
    private ProductoService productoService = new ProductoService();
    private CategoriaService categoriaService = new CategoriaService();

    /**
     * Creates new form FrmProducto
     */
    public FrmProducto() {
        try {
            initComponents();
            URL url = getClass().getClassLoader().getResource("Logo.png");
            if (url != null) {
                this.lblTituloFormulario.setIcon(new ImageIcon(url));
            } else {
                System.err.println("¡Recurso no encontrado: miIcono.png!");
            }
            this.lblTituloFormulario.setText("Mantenimiento de Producto");
            this.setTitle("Mantenimiento de Producto");
            limpiar();
            inicializarTablaProducto(null);
        } catch (Exception ex) {
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTituloFormulario = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jtbPrincipal = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtFiltro = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        btnFiltar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboCategoria = new javax.swing.JComboBox<>();
        txtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JFormattedTextField();
        LblStock = new javax.swing.JLabel();
        txtStock = new javax.swing.JFormattedTextField();
        jPanel8 = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(589, 60));

        lblTituloFormulario.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTituloFormulario.setText("Mantenimiento");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTituloFormulario, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTituloFormulario)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        jtFiltro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtFiltro);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel6.setPreferredSize(new java.awt.Dimension(776, 50));

        jLabel1.setText("Filtro:");

        btnFiltar.setText("Filtrar");
        btnFiltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFiltar)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltar))
                .addGap(12, 12, 12))
        );

        jPanel3.add(jPanel6, java.awt.BorderLayout.NORTH);

        jtbPrincipal.addTab("Listar", jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("Código:");

        txtCodigo.setEditable(false);
        txtCodigo.setEnabled(false);
        txtCodigo.setFocusable(false);

        jLabel3.setText("Nombre:");

        jLabel4.setText("Categoría:");

        jLabel5.setText("Precio:");

        LblStock.setText("Stock:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNombre)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LblStock)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 524, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LblStock)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(276, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel8.setPreferredSize(new java.awt.Dimension(776, 40));

        btnEliminar.setMnemonic('e');
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Eliminar Producto");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGuardar.setMnemonic('g');
        btnGuardar.setText("Guardar");
        btnGuardar.setToolTipText("Guarda Producto");
        btnGuardar.setMaximumSize(new java.awt.Dimension(76, 23));
        btnGuardar.setMinimumSize(new java.awt.Dimension(76, 23));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnNuevo.setMnemonic('n');
        btnNuevo.setText("Nuevo");
        btnNuevo.setToolTipText("Nuevo Producto");
        btnNuevo.setMaximumSize(new java.awt.Dimension(76, 23));
        btnNuevo.setMinimumSize(new java.awt.Dimension(76, 23));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 605, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.add(jPanel8, java.awt.BorderLayout.SOUTH);

        jtbPrincipal.addTab("Operación", jPanel4);

        jPanel2.add(jtbPrincipal, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            if(validarCamposProducto()){
                producto = new Producto();
                producto.setNombre(this.txtNombre.getText().trim().toUpperCase());
                producto.setCategoria((Categoria) this.cboCategoria.getSelectedItem());
                producto.setPrecio(((BigDecimal) this.txtPrecio.getValue()).doubleValue());
                Object stockObj = txtStock.getValue();
                if (stockObj instanceof Number number) {
                    double stock = number.doubleValue();
                    producto.setStock(stock);
                } else {
                    producto.setStock(Double.valueOf(stockObj.toString()));
                }
                if (this.txtCodigo.getText().trim().length() <= 0 || this.txtCodigo.getText().equalsIgnoreCase("")) {
                    //Agregar
                    producto = productoService.agregarProducto(producto);
                    if (producto != null) {
                        txtCodigo.setText(String.valueOf(producto.getIdProducto()));
                        enviarMensajeExito("Se registró la Categoría con ID: " + producto.getIdProducto());
                    }
                } else {
                    //Actualizar
                    producto.setIdProducto(Integer.valueOf(this.txtCodigo.getText()));
                    producto = productoService.editarInformacionProducto(producto);
                    if (producto != null) {
                        txtCodigo.setText(String.valueOf(producto.getIdProducto()));
                        enviarMensajeExito("Se actualizó la Categoría con ID: " + producto.getIdProducto());
                    }
                }
                inicializarTablaProducto(null);
            }
        } catch (Exception ex) {
            enviarMensajeError("Ocurrio un error: " + ex.getMessage());
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnFiltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltarActionPerformed
        try {
            this.inicializarTablaProducto(productoService.filtrarProductosPorNombre(this.txtFiltro.getText().trim()));
        } catch (Exception ex) {
            enviarMensajeError("Ocurrio un error: " + ex.getMessage());
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFiltarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiar();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            if (this.txtCodigo.getText().trim().length() <= 0 || this.txtCodigo.getText().equalsIgnoreCase("")) {
                enviarMensajeError("No existe Producto para eliminar");
            } else {
                int opc = JOptionPane.showConfirmDialog(
                        this,
                        "¿Desea eliminar el Producto seleccionado?",
                        "Confirmar eliminación",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE
                );
                if (opc != JOptionPane.YES_OPTION) {
                    return;
                }
                
                producto = new Producto();
                producto.setIdProducto(Integer.valueOf(this.txtCodigo.getText()));
                producto.setNombre(this.txtNombre.getText().trim().toUpperCase());
                producto.setCategoria((Categoria) this.cboCategoria.getSelectedItem());
                producto.setPrecio(((BigDecimal) this.txtPrecio.getValue()).doubleValue());
                Object stockObj = txtStock.getValue();
                if (stockObj instanceof Number number) {
                    double stock = number.doubleValue();
                    producto.setStock(stock);
                } else {
                    producto.setStock(Double.valueOf(stockObj.toString()));
                }
                productoService.eliminarProducto(producto);
                enviarMensajeExito("Se eliminó de manera correcta el Producto: " + this.txtNombre.getText().trim());
                limpiar();
            }
        } catch (Exception ex) {
            enviarMensajeError("Ocurrio un error: " + ex.getMessage());
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    public void limpiar() {
        producto = new Producto();
        txtCodigo.setText("");
        txtNombre.setText("");
        configurarTxtPrecio();
        configurarTxtStock();
        llenarComboCategoria();
        inicializarTablaProducto(null);
        txtNombre.requestFocusInWindow();
    }

    public void llenarComboCategoria() {
        try {
            List<Categoria> categorias = categoriaService.listarCategorias();
            // 1) Limpia el combo
            cboCategoria.removeAllItems();
            // 2) Añade cada categoría
            for (Categoria c : categorias) {
                cboCategoria.addItem(c);
            }
            // 3) (Opcional) que no haya nada seleccionado
            cboCategoria.setSelectedIndex(0);
        } catch (Exception ex) {
            enviarMensajeError("Ocurrio un error: " + ex.getMessage());
            Logger.getLogger(FrmCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void configurarTxtPrecio() {
        // 1) Configurar símbolos: coma decimal, punto miles
        DecimalFormatSymbols symbols = new DecimalFormatSymbols();
        symbols.setDecimalSeparator('.');
        symbols.setGroupingSeparator(',');

        // 2) Crear patrón: 'S/.' como literal, luego grupo de miles, dos decimales
        DecimalFormat format = new DecimalFormat("'S/. '#,##0.00", symbols);
        format.setParseBigDecimal(true);  // para obtener BigDecimal al parsear

        // 3) NumberFormatter que bloquea caracteres inválidos
        NumberFormatter formatter = new NumberFormatter(format);
        formatter.setAllowsInvalid(false);      // no deja texto mal formado
        formatter.setOverwriteMode(true);       // sobreescribe mientras tipeas
        formatter.setValueClass(java.math.BigDecimal.class);

        // 4) El JFormattedTextField con valor inicial 0.00 => "S/.0,00"
        DefaultFormatterFactory defaultFormatterFactory = new DefaultFormatterFactory(formatter);
        this.txtPrecio.setColumns(10);
        this.txtPrecio.setFormatterFactory(defaultFormatterFactory);
        this.txtPrecio.setValue(new java.math.BigDecimal("0.00"));

    }

    private void inicializarTablaProducto(List<Producto> productos) {
        // 1) Definir el modelo con 6 columnas: objeto, ID, nombre, categoría, precio y stock
        DefaultTableModel model = new DefaultTableModel(
                new String[]{"OBJ", "ID", "Nombre", "Categoría", "Precio", "Stock"},
                0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                if (columnIndex == 0) {
                    return Producto.class;      // guardamos el objeto completo
                }
                return super.getColumnClass(columnIndex);
            }
        };

        // 2) Rellenar el modelo
        if (productos != null) {
            for (Producto p : productos) {
                model.addRow(new Object[]{
                    p, // columna oculta
                    p.getIdProducto(), // ID
                    p.getNombre().toUpperCase(), // Nombre
                    p.getCategoria(), // Categoria (usará toString())
                    p.getPrecio(), // Precio (double)
                    p.getStock() // Stock (int o double según tu modelo)
                });
            }
        }

        // 3) Asignar el modelo a la tabla
        jtFiltro.setModel(model);

        // 4) Ajustar anchos de columna
        // Ocultar columna 0 (OBJ)
        jtFiltro.getColumnModel().getColumn(0).setMinWidth(0);
        jtFiltro.getColumnModel().getColumn(0).setMaxWidth(0);
        jtFiltro.getColumnModel().getColumn(0).setWidth(0);

        // Columna 1 (ID) con ancho fijo de 50px
        jtFiltro.getColumnModel().getColumn(1).setMinWidth(50);
        jtFiltro.getColumnModel().getColumn(1).setMaxWidth(50);

        // Resto de columnas se redimensionan automáticamente
        jtFiltro.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);

        // 5) Listener para doble clic
        jtFiltro.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2 && !e.isConsumed()) {
                    e.consume();
                    int row = jtFiltro.getSelectedRow();
                    if (row >= 0) {
                        // 5.1) Obtener producto de la columna oculta
                        Producto seleccionado = (Producto) jtFiltro.getModel().getValueAt(row, 0);
                        // 5.2) Rellenar los campos
                        txtCodigo.setText(String.valueOf(seleccionado.getIdProducto()));
                        txtNombre.setText(seleccionado.getNombre().toUpperCase());
                        cboCategoria.setSelectedItem(seleccionado.getCategoria());
                        txtPrecio.setValue(BigDecimal.valueOf(seleccionado.getPrecio()));
                        txtStock.setValue(seleccionado.getStock());
                        // 5.3) Cambiar a la segunda pestaña
                        jtbPrincipal.setSelectedIndex(1);
                        // 5.4) Poner foco en el nombre
                        txtNombre.requestFocusInWindow();
                    }
                }
            }
        });
        
        jtFiltro.getTableHeader().setReorderingAllowed(false);
    }

    private boolean validarCamposProducto() {
        // Nombre
        if (txtNombre.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(
                    this,
                    "El campo Nombre no puede estar vacío.",
                    "Validación",
                    JOptionPane.WARNING_MESSAGE
            );
            txtNombre.requestFocusInWindow();
            return false;
        }

        // Categoría
        if (cboCategoria.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(
                    this,
                    "Debe seleccionar una Categoría.",
                    "Validación",
                    JOptionPane.WARNING_MESSAGE
            );
            cboCategoria.requestFocusInWindow();
            return false;
        }

        // Precio
        Object precioVal = txtPrecio.getValue();
        if (!(precioVal instanceof Number) || ((Number) precioVal).doubleValue() <= 0) {
            JOptionPane.showMessageDialog(
                    this,
                    "El Precio debe ser mayor que 0.",
                    "Validación",
                    JOptionPane.WARNING_MESSAGE
            );
            txtPrecio.requestFocusInWindow();
            return false;
        }

        // Stock
        Object stockVal = txtStock.getValue();
        if (!(stockVal instanceof Number) || ((Number) stockVal).doubleValue() < 0) {
            JOptionPane.showMessageDialog(
                    this,
                    "El Stock debe ser un número entero igual o mayor que 0.",
                    "Validación",
                    JOptionPane.WARNING_MESSAGE
            );
            txtStock.requestFocusInWindow();
            return false;
        }

        // Todos los campos son correctos
        return true;
    }

    public void configurarTxtStock() {
        // 1) Formato de enteros sin separador de miles
        NumberFormat intFormat = NumberFormat.getIntegerInstance();
        intFormat.setGroupingUsed(false);

        // 2) NumberFormatter para bloquear inválidos y forzar mínimo 0
        NumberFormatter stockFormatter = new NumberFormatter(intFormat);
        stockFormatter.setValueClass(Integer.class);  // valor de tipo Integer
        stockFormatter.setAllowsInvalid(false);       // no permite texto mal formado
        stockFormatter.setMinimum(0);                 // mínimo 0 (entero positivo)

        // 3) Asignar el formatter al JFormattedTextField
        this.txtStock.setFormatterFactory(new DefaultFormatterFactory(stockFormatter));
        this.txtStock.setColumns(5);                       // ancho deseado
        this.txtStock.setValue(0);                         // valor inicial
    }

    public void enviarMensajeExito(String mensaje) {
        JOptionPane.showMessageDialog(
                this, // parent component (tu JFrame o JInternalFrame)
                mensaje,
                "Operación exitosa", // título de la ventana
                JOptionPane.INFORMATION_MESSAGE // icono de información
        );
    }

    public void enviarMensajeError(String mensaje) {
        JOptionPane.showMessageDialog(
                this, // parent component (tu JFrame o JInternalFrame)
                mensaje,
                "Error", // título de la ventana
                JOptionPane.ERROR_MESSAGE // icono de información
        );
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LblStock;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFiltar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<Categoria> cboCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtFiltro;
    private javax.swing.JTabbedPane jtbPrincipal;
    private javax.swing.JLabel lblTituloFormulario;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JFormattedTextField txtPrecio;
    private javax.swing.JFormattedTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
